let tg = window.Telegram.WebApp;
tg.expand();

// User info
let user = tg.initDataUnsafe?.user || { id: 0, username: "guest" };

// Balance & Referral
let balance = parseInt(localStorage.getItem("balance_" + user.id)) || 100;
let refLink = `https://t.me/theIncomeGuru_bot?start=${user.id}`;
document.getElementById("refLink").value = refLink;

// Daily bonus tracking
let bonusData = JSON.parse(localStorage.getItem("bonus_" + user.id)) || { count: 0, lastClaim: 0 };

// Update balance display
function updateBalance() {
  document.getElementById("balance").innerText = `рз│ ${balance}`;
}
updateBalance();

// Start button тЖТ Join Channel message
function onStart() {
  alert("ЁЯУв Mini App ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЖржЧрзЗ ржЪрзНржпрж╛ржирзЗрж▓ Join ржХрж░рзБржи ржЕржержмрж╛ ржирж┐ржЪрзЗрж░ рж▓рж┐ржВржХ ржХрзНрж▓рж┐ржХ ржХрж░рзБржиред");
}

// Claim daily bonus (рзй ржмрж╛рж░ / рзирзк ржШржирзНржЯрж╛)
function claimBonus() {
  let now = Date.now();
  if (now - bonusData.lastClaim > 24*60*60*1000) {
    bonusData.count = 0;
  }

  if (bonusData.count < 3) {
    balance += 10;
    bonusData.count += 1;
    bonusData.lastClaim = now;
    localStorage.setItem("bonus_" + user.id, JSON.stringify(bonusData));
    localStorage.setItem("balance_" + user.id, balance);
    updateBalance();
    alert(`ЁЯОЙ ржмрзЛржирж╛рж╕ ржжрж╛ржмрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ! ржЖржЬржХрзЗ ${bonusData.count}/3 ржмрж╛рж░`);
  } else {
    alert("ЁЯШЕ ржЖржЬржХрзЗрж░ ржмрзЛржирж╛рж╕ рж╢рзЗрж╖ред рзирзк ржШржирзНржЯрж╛ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред");
  }
}

// Copy referral link & give 55рз│ for first referral
function copyLink() {
  navigator.clipboard.writeText(refLink);
  let referrals = parseInt(localStorage.getItem("ref_count_" + user.id)) || 0;
  
  if (!localStorage.getItem("ref_" + user.id)) {
    balance += 55; // Referral bonus
    localStorage.setItem("balance_" + user.id, balance);
    localStorage.setItem("ref_" + user.id, true);

    referrals += 1;
    localStorage.setItem("ref_count_" + user.id, referrals);

    updateBalance();
    alert("ЁЯФЧ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржЩрзНржХ ржХржкрж┐ рж╣ржпрж╝рзЗржЫрзЗ! рзлрзлрз│ ржпрзБржХрзНржд рж╣ржпрж╝рзЗржЫрзЗред");
  } else {
    alert("ЁЯФЧ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржЩрзНржХ ржХржкрж┐ рж╣ржпрж╝рзЗржЫрзЗ!");
  }
}

// Withdraw function (Bkash/Nagad, min 700рз│, 25 referrals required)
function withdraw() {
  if (balance < 700) {
    alert("тЭМ Withdraw ржХрж░рж╛рж░ ржЬржирзНржп ржХржоржкржХрзНрж╖рзЗ 700рз│ balance ржерж╛ржХрждрзЗ рж╣ржмрзЗред");
    return;
  }

  let referrals = parseInt(localStorage.getItem("ref_count_" + user.id)) || 0;
  if (referrals < 25) {
    alert(`тЭМ Withdraw ржХрж░рж╛рж░ ржЬржирзНржп 25 ржЯрж┐рж░ ржмрзЗрж╢рж┐ referral ржерж╛ржХрждрзЗ рж╣ржмрзЗред ржЖржкржирж╛рж░ referral: ${referrals}`);
    return;
  }

  let method = prompt("Withdraw Method рж▓рж┐ржЦрзБржи: Bkash ржмрж╛ Nagad").toLowerCase();
  if (method !== "bkash" && method !== "nagad") {
    alert("тЭМ Bkash ржмрж╛ Nagad ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред");
    return;
  }

  let number = prompt(`${method.charAt(0).toUpperCase() + method.slice(1)} ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзБржи`);
  if (!number || number.length < 11) {
    alert("тЭМ рж╕ржарж┐ржХ ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзБржиред");
    return;
  }

  let amount = prompt("ржХржд ржЯрж╛ржХрж╛ Withdraw ржХрж░рждрзЗ ржЪрж╛ржи?");
  amount = parseInt(amount);
  if (isNaN(amount) || amount <= 0) {
    alert("тЭМ рж╕ржарж┐ржХ рж╕ржВржЦрзНржпрж╛ рж▓рж┐ржЦрзБржиред");
    return;
  }

  if (amount > balance) {
    alert("тЭМ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рж╛ржирзНрж╕рзЗрж░ ржЪрзЗржпрж╝рзЗ ржмрзЗрж╢рж┐ ржЯрж╛ржХрж╛ withdraw ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ред");
    return;
  }

  if (amount < 700) {
    alert("тЭМ Minimum 700рз│ withdraw ржХрж░рж╛ ржпрж╛ржмрзЗред");
    return;
  }

  balance -= amount;
  localStorage.setItem("balance_" + user.id, balance);
  updateBalance();

  tg.sendData(`withdraw_${amount}_${method}_${number}`);
  alert(`тЬЕ ржЖржкржирж╛рж░ ${amount}рз│ ${method.charAt(0).toUpperCase() + method.slice(1)} ржирж╛ржорзНржмрж╛рж░рзЗ withdraw request ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ!`);
}